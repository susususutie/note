import{_ as s,c as o,o as e,N as a}from"./chunks/framework.f0874142.js";const m=JSON.parse('{"title":"To be sorted out","description":"","frontmatter":{},"headers":[],"relativePath":"wsl/index.md","lastUpdated":1680506384000}'),n={name:"wsl/index.md"},t=a(`<h1 id="to-be-sorted-out" tabindex="-1">To be sorted out <a class="header-anchor" href="#to-be-sorted-out" aria-label="Permalink to &quot;To be sorted out&quot;">​</a></h1><p>待整理的记录笔记</p><p><strong>wsl.conf</strong></p><p>更改<code>wsl.conf</code>后需要关闭 linux 子系统, 并等待至少 8s 待其完全关闭, 再重启才能生效.</p><p>也可以使用<code>wsl --shutdown</code>关闭所有linux子系统.</p><p>位置: 在linux的/etc/wsl.conf</p><p>文件可能不存在, 需要手动创建, 管理员权限 <code>sudo touch wsl.conf</code> 更改wsl.conf需要管理员权限, <code>sudo vim wsl.conf</code> 部分发行版默认没有vim, 可以使用vi, 使用方法一致<code>sudo vi wsl.conf</code></p><p>新增以下内容</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">boot</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">systemd</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">true</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">interop</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">appendWindowsPath</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">false</span></span></code></pre></div><p>systemd=true用于启用systemd功能 appendWindowsPath=false用于禁用windows的path变量, 这样就无法在linux子系统里使用windows上的功能(如npm,yarn等工具), 做到隔离, 避免版本问题 但同时也无法使用code命令用windows的vscode打开linux上的文件,因此需要手动在linux的环境变量中添加code</p><p>查看环境变量, 检查配置是否生效</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> $PATH</span></span></code></pre></div><p>更改$PATH有很多方法, 这里采用更改<code>~/.zshrc</code>方法实现, 前提是已经安装zsh</p><p>在.zshrc中添加一行, 用于在.zshrc生效时自动往$PATH上追加新的变量, 注意下方的/mnt/c...路径是宿主windows上vscode的路径, 具体可以查看windows的环境变量</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">export</span><span style="color:#A6ACCD;"> PATH</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">$PATH</span><span style="color:#C3E88D;">:/mnt/c/Users/sutie/AppData/Local/Programs/Microsoft VS Code/bin</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><h3 id="zsh" tabindex="-1">zsh <a class="header-anchor" href="#zsh" aria-label="Permalink to &quot;zsh&quot;">​</a></h3><ul><li>安装zsh: <code>apt install zsh</code>, 安装好之后通过<code>zsh --version</code> 检查是否安装成功</li><li>设置为默认shell: 终端执行<code>chsh -s $(which zsh)</code>将zsh设置为默认shell, 重启后打印shell:<code>echo $SHELL</code>, 结果类似&#39;/usr/bin/zsh&#39;表示成功</li><li>新建zsh配置文件: <code>touch ~/.zshrc</code></li><li>安装OnMyZsh: <code>sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;</code></li></ul><p>安装好后, <code>.zhsrc</code>会被写入配置数据, 更改其中的ZSH_THEME为&#39;ZSH_THEME=&quot;agnoster&quot;&#39;以启用&#39;agnoster&#39;主题配色, 若部分符号显示异常,需要同时更改windows终端字体</p><p>参考:</p><p><a href="https://learn.microsoft.com/zh-cn/windows/wsl/wsl-config" target="_blank" rel="noreferrer">WSL官方文档</a><a href="https://github.com/ohmyzsh/ohmyzsh/wiki/Installing-ZSH" target="_blank" rel="noreferrer">install zsh</a><a href="https://ohmyz.sh/#install" target="_blank" rel="noreferrer">install ohmyzsh</a></p>`,20),l=[t];function c(p,r,i,d,h,u){return e(),o("div",null,l)}const D=s(n,[["render",c]]);export{m as __pageData,D as default};
