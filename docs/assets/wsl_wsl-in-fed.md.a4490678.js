import{_ as e,o as s,c as t,a as o}from"./app.0c7ff9da.js";const i="/vitepress-note/assets/check-vm.495cfc8e.png",n="/vitepress-note/assets/enable-windows-function.d2788a64.png",a="/vitepress-note/assets/wsl--list--online.0d5a078f.png",l="/vitepress-note/assets/wsl--install.2fa92cee.png",d="/vitepress-note/assets/wsl--list.b45998a1.png",r="/vitepress-note/assets/terminal-setting.743fffe8.png",c="/vitepress-note/assets/terminal-new-tab.a25628e7.png",p="/vitepress-note/assets/terminal-kali-linux.65788fe2.png",S=JSON.parse('{"title":"在 Windows 中启用 WSL 以进行前端开发","description":"","frontmatter":{},"headers":[],"relativePath":"wsl/wsl-in-fed.md","lastUpdated":null}'),w={name:"wsl/wsl-in-fed.md"},_=o('<h1 id="在-windows-中启用-wsl-以进行前端开发" tabindex="-1">在 Windows 中启用 <code>WSL</code> 以进行前端开发 <a class="header-anchor" href="#在-windows-中启用-wsl-以进行前端开发" aria-hidden="true">#</a></h1><p><code>WSL</code>(适用于 Linux 的 Windows 子系统) 可让开发人员直接在 Windows 上按原样运行 GNU/Linux 环境（包括大多数命令行工具、实用工具和应用程序），且不会产生传统虚拟机或双启动设置开销。可通过下列步骤在启用 <code>WSL</code> 并搭建前端开发环境。</p><h3 id="_1-设备开启虚拟化" tabindex="-1">1. 设备开启虚拟化 <a class="header-anchor" href="#_1-设备开启虚拟化" aria-hidden="true">#</a></h3><p>打开 &quot;设备管理器&quot; 确认 &quot;虚拟化&quot; 已开启, 若未开启, 需在 Bios 设置中开启虚拟化, 各设备的 Bios 设置不同, 此处请自行搜索.</p><p><img src="'+i+'" alt="check-vm"></p><h3 id="_2-windows-启用相应功能" tabindex="-1">2. Windows 启用相应功能 <a class="header-anchor" href="#_2-windows-启用相应功能" aria-hidden="true">#</a></h3><ol><li><p>以管理员身份运行 PowerShell, 输入命令 <code>dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart</code> 以启用 <code>WSL</code> 功能.</p></li><li><p>以管理员身份运行 PowerShell, 输入命令 <code>dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart</code> 以启用 <code>虚拟机平台</code> 功能.</p></li></ol><p><em>注意: 你也可以直接搜索 &quot;启用或关闭 Windows 功能&quot;, 在操作面板中勾选 &quot;适用于 Linux 的 Windows 子系统&quot; 和 &quot;虚拟机平台&quot;</em></p><p><img src="'+n+'" alt="enable-windows-function"></p><p>下载 Linux 内核更新包 <a href="https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi" target="_blank" rel="noreferrer">https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi</a>, 若为 Windows11 系统可跳过该步.</p><ol start="3"><li>在 PoweShell 运行 <code>wsl --set-default-version 2</code> 将 WSL2 设置为默认版本</li></ol><p><em>注意: 更多命令可输入 <code>wsl --help</code> 查看</em></p><h3 id="_3-下载-安装-linux-分发版" tabindex="-1">3. 下载, 安装 Linux 分发版 <a class="header-anchor" href="#_3-下载-安装-linux-分发版" aria-hidden="true">#</a></h3><p>可通过 Windows 应用商店或命令行方式安装适用于 <code>WSL</code> 的 Linux 分发版, 以下以命令行安装为例:</p><p>在 Windows 终端输入命令 <code>wsl --list --online</code>, 查看所有可安装的 Linux 发行版</p><p><img src="'+a+'" alt="wsl--install"></p><p>通过 <code>wsl --install &lt;name&gt;</code> 命令安装指定发行版, 按提示设置用户名, 密码后等待安装完成即可</p><p><img src="'+l+'" alt="wsl--install"></p><p>安装好之后通过命令 <code>wsl --list</code> 即可查看本地安装的所有 Linux 子系统</p><p><img src="'+d+'" alt="wsl--list"></p><h3 id="_4-安装配置-windows-终端" tabindex="-1">4. 安装配置 Windows 终端 <a class="header-anchor" href="#_4-安装配置-windows-终端" aria-hidden="true">#</a></h3><ol><li><p>在应用商店搜索安装 <code>Windows Terminal</code> 作为默认终端 <img src="'+r+'" alt="terminal-setting"></p></li><li><p>点击添加配置文件, 复制一份对应 Linux 发行版的配置文件 <img src="'+c+'" alt="terminal-new-tab"></p></li><li><p>通过下拉框新建一个标签页打开对应终端 <img src="'+p+'" alt="terminal-kali-linux"></p></li></ol><p>之后便可以正常安装<code>Git</code>, <code>nvm</code> 等工具配置前端环境了</p>',23),m=[_];function u(h,f,x,g,b,W){return s(),t("div",null,m)}const v=e(w,[["render",u]]);export{S as __pageData,v as default};
