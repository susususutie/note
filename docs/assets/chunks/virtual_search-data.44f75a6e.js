const t={map:'[{"nlp":["0.0"],"人工智能":["0.1"],"图灵测试":["0.2"],"ref":["0.3","2.6","3.1"],"todo":["1.0"],"nvm":["1.1"],"离屏":["2.0"],"定义":["2.1"],"与普通":["2.2"],"浏览器支持情况":["2.3"],"如何使用":["2.4"],"应用场景":["2.5"],"github":["3.0"],"前端开发者的python入门教程":["5.0"],"前言":["5.1","7.1"],"数据类型":["5.2"],"基础数据类型":["5.3"],"复杂数据类型":["5.4"],"运算":["5.5"],"数值运算":["5.6"],"比较运算":["5.7"],"逻辑运算":["5.8"],"条件运算":["5.9"],"循环与判断":["5.10"],"变量与常量":["5.11"],"基础语法":["5.12"],"rust":["6.0"],"写给前端开发者的":["7.0"],"变量和数据类型":["7.2"],"基本类型":["7.3"],"整数":["7.4"],"浮点数":["7.5"],"布尔值":["7.6"],"字符":["7.7"],"复合类型":["7.8"],"元组":["7.9"],"数组":["7.10"],"自定义类型":["7.11"],"结构体":["7.12"],"枚举":["7.13"],"trait":["7.14"],"控制流":["7.15"],"函数":["7.16"],"错误处理":["7.17"],"可恢复错误":["7.18"],"result":["7.19"],"不可恢复错误":["7.20"],"panic":["7.21"],"模块系统":["7.22"],"模块":["7.23"],"包和库":["7.24"],"二进制":["7.25"],"所有权与借用":["7.26"],"所有权":["7.27"],"借用":["7.28"],"不可变借用":["7.29"],"可变借用":["7.30"],"并发编程":["7.31"],"线程":["7.32"],"通道":["7.33"],"互斥锁":["7.34"],"参考":["7.35"],"to":["8.0"],"zsh":["8.1"],"wsl":["9.0"],"安装":["9.1"],"path":["9.2"],"参考链接":["9.3"],"在":["10.0"]},{"1":["2.4","10.1","10.2"],"2":["10.2"],"3":["10.3"],"4":["10.4"],"自然语言处理":["0.0","0.3"],"artificial":["0.1"],"intelligence":["0.1"],"要讨论人工智能":["0.1"],"ai":["0.1"],"前提是先定义人工智能":["0.1"],"turing":["0.2"],"注意":["1.1"],"默认使用":["1.1"],"default":["1.1"],"版本的":["1.1"],"node":["1.1"],"canvas":["2.0","2.1","2.2"],"离屏":["2.1"],"offscreencanvas":["2.1","2.2","2.3","2.4","2.5"],"是":["2.1","7.14"],"html5":["2.1"],"的区别":["2.2"],"与传统的":["2.2"],"对象非常相似":["2.2"],"创建":["2.4"],"对象":["2.4"],"并传递给":["2.4"],"worker":["2.4"],"在主线程中使用":["2.4"],"new":["2.4"],"width":["2.4"],"height":["2.4"],"方法创建":["2.4"],"其中":["2.4"],"和":["2.4","7.15","7.19"],"分别是":["2.4"],"的宽度和高度":["2.4"],"需要注意的是":["2.4"],"不会被添加到":["2.4"],"dom":["2.4"],"树中":["2.4"],"因此不会显示在页面上":["2.4"],"只能在":["2.4"],"web":["2.4"],"中进行绘图操作":["2.4"],"图像处理":["2.5"],"可以在":["2.5"],"caniuse":["2.6"],"action":["3.0"],"creating":["3.1"],"a":["3.1","7.9"],"本文旨在通过对比javascript与python的语法":["5.1"],"number":["5.3"],"array":["5.4"],"object":["5.4"],"加减乘除取余取模自增自减":["5.6"],"rust":["7.0","7.1","7.2","7.3","7.4","7.5","7.6","7.7","7.9","7.11","7.12","7.13","7.14","7.15","7.16","7.17","7.19","7.22","7.23","7.27","7.31","7.32","7.33","7.34"],"是一门系统编程语言":["7.1"],"的整数类型包括有符号和无符号两种类型":["7.4"],"的浮点数类型包括单精度":["7.5"],"的布尔值类型为":["7.6"],"复合类型可以将多个值组合成一个类型":["7.8"],"元组是一个可以包含多个类型的值的组合":["7.9"],"类似":["7.9","7.10"],"ts":["7.9","7.10"],"的元组":["7.9"],"例如":["7.9","7.19","7.23"],"let":["7.9"],"数组是具有固定长度的相同类型元素的集合":["7.10"],"的数组":["7.10"],"的自定义类型包括结构体":["7.11"],"的结构体":["7.12"],"struct":["7.12"],"类似于":["7.12"],"的枚举":["7.13"],"enum":["7.13"],"中的一种特殊类型":["7.14"],"用于定义共享行为":["7.14"],"支持常见的控制流结构":["7.15"],"如":["7.15"],"if":["7.15"],"else":["7.15"],"while":["7.15"],"for":["7.15"],"等":["7.15"],"的":["7.15"],"的函数定义使用":["7.16"],"fn":["7.16"],"关键字":["7.16"],"提供了一种强大的错误处理机制":["7.17"],"可恢复错误是那些可以通过返回一个":["7.18"],"result":["7.18","7.20"],"类型来处理的错误":["7.18","7.20"],"类型是一个枚举类型":["7.18"],"有两个变体":["7.18"],"是一个枚举类型":["7.19"],"用于表示可能出错的操作的结果":["7.19"],"它有两个变体":["7.19"],"ok":["7.19"],"err":["7.19"],"不可恢复错误是那些无法通过返回一个":["7.20"],"模块是":["7.23"],"中的命名空间":["7.23"],"用于将相关的代码组织在一起":["7.23"],"可以使用":["7.23","7.29","7.30","7.32","7.34"],"mod":["7.23"],"关键字定义模块":["7.23"],"包":["7.24"],"package":["7.24"],"是一个包含一个或多个库":["7.24"],"library":["7.24"],"binary":["7.25"],"是一个可执行程序":["7.25"],"在":["7.25","7.32","7.33","7.34"],"ownership":["7.27"],"所有权是":["7.27"],"中的一个核心概念":["7.27"],"用于管理内存":["7.27"],"borrowing":["7.28"],"不可变借用是对值的只读访问":["7.29"],"符号创建不可变引用":["7.29"],"可变借用是对值的可写访问":["7.30"],"mut":["7.30"],"符号创建可变引用":["7.30"],"线程是操作系统中的并发执行单元":["7.32"],"中":["7.32","7.33","7.34"],"std":["7.32","7.34"],"channel":["7.33"],"是一种用于在线程之间传递消息的同步原语":["7.33"],"mutex":["7.34"],"是一种用于在线程之间同步访问共享资源的同步原语":["7.34"],"sync":["7.34"],"类型创建和管理互斥锁":["7.34"],"be":["8.0"],"sorted":["8.0"],"out":["8.0"],"待整理的记录笔记":["8.0"],"wsl":["8.0"],"conf":["8.0"],"更改":["8.0"],"后需要关闭":["8.0"],"linux":["8.0","10.3"],"子系统":["8.0"],"安装zsh":["8.1"],"apt":["8.1"],"install":["8.1"],"安装好之后通过":["8.1"],"version":["8.1"],"todo":["9.0"],"默认情况下":["9.2"],"微软wsl官方文档":["9.3"],"windows":["10.0","10.2","10.4"],"中启用":["10.0"],"设备开启虚拟化":["10.1"],"启用相应功能":["10.2"],"以管理员身份运行":["10.2"],"powershell":["10.2"],"输入命令":["10.2"],"dism":["10.2"],"exe":["10.2"],"online":["10.2"],"enable":["10.2"],"下载":["10.3"],"安装":["10.3"],"分发版":["10.3"],"安装配置":["10.4"]},{"1":["10.4"],"2":["2.4"],"3":["7.9"],"8":["7.4"],"14":["7.9"],"16":["7.4"],"42":["7.9","7.15"],"natural":["0.0"],"language":["0.0"],"人工智能的定义可以分为两部分":["0.1"],"即":["0.1"],"人工":["0.1"],"和":["0.1","2.2","7.18"],"智能":["0.1"],"即由人设计":["0.1"],"test":["0.2"],"维基百科":["0.3"],"这里的":["1.1"],"只是一个别名":["1.1"],"当":["1.1"],"发布新版本后":["1.1"],"offscreencanvas":["2.0","2.6"],"提供的一个":["2.1"],"api":["2.1","2.4"],"可以在":["2.1"],"web":["2.1","2.5"],"worker":["2.1","2.5"],"都同时支持":["2.2"],"2d":["2.2"],"webgl":["2.2","2.4"],"渲染上下文":["2.2"],"不同的是":["2.2"],"是一个实验性的特性":["2.3"],"但已获得所有主流浏览器的支持":["2.3"],"在":["2.4","7.20","7.24","7.27"],"并将绘图结果回传给主线程":["2.4"],"中使用":["2.4"],"transfertoimagebitmap":["2.4"],"方法将":["2.4"],"对象转换为":["2.4"],"imagebitmap":["2.4"],"并使用":["2.4"],"对象进行绘图操作":["2.4"],"可以使用":["2.4","7.25","7.33"],"canvasrenderingcontext2d":["2.4"],"或":["2.4"],"等":["2.4"],"进行绘图":["2.4"],"完成后将结果通过":["2.4"],"postmessage":["2.4"],"方法发送回主线程":["2.4"],"在主线程中将结果绘制到":["2.4"],"canvas":["2.4"],"元素上":["2.4"],"中对大量图像进行处理":["2.5"],"杂项":["3.0"],"custom":["3.1"],"github":["3.1"],"向前端开发者介绍python":["5.1"],"bigint":["5.3"],"string":["5.3","7.19"],"function":["5.4"],"set":["5.4"],"入门教程":["7.0"],"它的目标是提供一种安全":["7.1"],"并发":["7.1"],"实用的编程语言":["7.1"],"是一门静态类型语言":["7.2"],"的基本类型包括整数":["7.3"],"分别有":["7.4"],"f32":["7.5"],"和双精度":["7.5"],"bool":["7.6","7.9"],"有两个值":["7.6"],"的字符类型为":["7.7"],"char":["7.7"],"rust":["7.8","7.10","7.24","7.25","7.28","7.29","7.30"],"i32":["7.9","7.10","7.19","7.23"],"f64":["7.9"],"true":["7.9"],"访问元组中的值可以使用模式匹配或者使用点号加索引":["7.9"],"例如":["7.10","7.14","7.15","7.16","7.29","7.30","7.32","7.33","7.34"],"let":["7.10","7.15"],"a":["7.10","7.15","7.19","7.23"],"struct":["7.11"],"枚举":["7.11"],"javascript":["7.12","7.13","7.15"],"的对象":["7.12"],"结构体可以包含多个字段":["7.12"],"每个字段需要指定类型":["7.12"],"类似于":["7.13"],"的类":["7.13"],"但它可以表示多种类型":["7.13"],"可以被其他类型实现":["7.14"],"从而获得":["7.14"],"中定义的方法":["7.14"],"语法与":["7.15"],"类似":["7.15"],"函数参数需要指定类型":["7.16"],"返回值类型使用":["7.16"],"指定":["7.16"],"可以帮助你编写健壮的代码":["7.17"],"有两种错误类型":["7.17"],"ok":["7.18"],"err":["7.18"],"例如在这个示例中":["7.18"],"我们尝试打开一个文件":["7.18"],"如果文件打开成功":["7.18"],"fn":["7.19","7.23","7.29","7.30","7.34"],"divide":["7.19"],"b":["7.19","7.23"],"这类错误通常表示程序中的严重问题":["7.20"],"需要立即终止程序的执行":["7.20"],"是一个宏":["7.21"],"用于在遇到不可恢复错误时终止程序":["7.21"],"的模块系统用于组织和管理代码":["7.22"],"模块系统包括以下几个部分":["7.22"],"math":["7.23"],"pub":["7.23"],"add":["7.23"],"的项目":["7.24"],"库是一组相关的模块":["7.24"],"中":["7.24","7.25","7.27"],"cargo":["7.25"],"工具来创建和管理二进制":["7.25"],"每个值都有一个唯一的所有者":["7.27"],"当所有者离开作用域时":["7.27"],"借用是":["7.28"],"append":["7.30"],"world":["7.30"],"提供了一些原生的并发编程特性":["7.31"],"thread":["7.32","7.34"],"模块创建和管理线程":["7.32"],"use":["7.32","7.34"],"std":["7.33"],"sync":["7.33"],"mpsc":["7.33"],"模块创建和管理通道":["7.33"],"arc":["7.34"],"main":["7.34"],"并等待至少":["8.0"],"8s":["8.0"],"待其完全关闭":["8.0"],"再重启才能生效":["8.0"],"也可以使用":["8.0"],"shutdown":["8.0"],"关闭所有linux子系统":["8.0"],"位置":["8.0"],"在linux的":["8.0"],"etc":["8.0"],"检查是否安装成功":["8.1"],"设置为默认shell":["8.1"],"终端执行":["8.1"],"chsh":["8.1"],"s":["8.1"],"which":["8.1"],"将zsh设置为默认shell":["8.1"],"wsl":["10.0","10.2","10.3"],"以进行前端开发":["10.0"],"打开":["10.1"],"设备管理器":["10.1"],"feature":["10.2"],"featurename":["10.2"],"microsoft":["10.2"],"subsystem":["10.2"],"linux":["10.2"],"all":["10.2"],"norestart":["10.2"],"以启用":["10.2"],"功能":["10.2"],"可通过":["10.3"],"windows":["10.3"],"应用商店或命令行方式安装适用于":["10.3"],"的":["10.3"],"终端":["10.4"],"在应用商店搜索安装":["10.4"]},{"0":["7.15","7.19","7.34"],"1":["7.10"],"2":["7.10"],"3":["7.10"],"4":["7.10"],"5":["7.10"],"32":["7.4"],"64":["7.4"],"processing":["0.0"],"aka":["0.0"],"创造":["0.1"],"制造":["0.1"],"这部分没有异议":["0.1"],"而关于":["0.1"],"的定义则充满争议":["0.1"],"争议的起源是我们人类对自身智能的理解都非常有限":["0.1"],"英语":["0.2"],"图灵测试":["0.3"],"当前安装的":["1.1"],"版本不再是最新的":["1.1"],"别名指向的最新版未安装":["1.1"],"导致全局环境下无法使用":["1.1"],"中创建一个":["2.1"],"对象":["2.1","7.18"],"这个对象没有对应的在":["2.1"],"dom":["2.1"],"树中显示的":["2.1"],"是在":["2.2"],"web":["2.2"],"worker":["2.2"],"中创建的":["2.2"],"只能在":["2.2"],"浏览器":["2.3"],"支持版本":["2.3"],"由于":["2.4"],"中创建":["2.4"],"因此需要注意跨线程通信的问题":["2.4"],"可以通过":["2.4"],"方法在主线程和":["2.4"],"线程之间进行通信":["2.4"],"从而实现数据的传递和共享":["2.4"],"下面是一个简单的示例代码":["2.4"],"js":["2.4"],"main":["2.4","7.32"],"在主线程中创建":["2.4"],"将其传递给worker":["2.4"],"并等待":["2.4"],"传回的绘制结果":["2.4"],"将结果绘制在主线程的普通":["2.4"],"上":["2.4"],"const":["2.4"],"offscreen":["2.4"],"从而提高页面性能":["2.5"],"例如":["2.5","7.5","7.7","7.12","7.13","7.21","7.27"],"可以使用":["2.5","7.20","7.24"],"浏览器支持":["2.6"],"mdn":["2.6"],"actions":["3.1"],"workflow":["3.1"],"帮助前端开发者入门python":["5.1"],"boolean":["5.3"],"map":["5.4"],"weakset":["5.4"],"的设计借鉴了现有的一些编程语言":["7.1"],"如":["7.1"],"变量在使用前必须声明":["7.2"],"浮点数":["7.3"],"和":["7.4","7.6","7.11"],"f64":["7.5"],"两种":["7.5"],"true":["7.6"],"false":["7.6"],"使用单引号表示":["7.7"],"有两个原生的复合类型":["7.8"],"x":["7.9"],"y":["7.9"],"z":["7.9"],"println":["7.9","7.15"],"enum":["7.11"],"point":["7.12"],"message":["7.13"],"printable":["7.14"],"fn":["7.14","7.32"],"print":["7.14","7.29"],"is":["7.15"],"negative":["7.15"],"positive":["7.15"],"add":["7.16"],"a":["7.16"],"i32":["7.16"],"可恢复错误":["7.17"],"recoverable":["7.17"],"errors":["7.17"],"我们将得到一个":["7.18"],"变体":["7.18"],"其中包含一个":["7.18"],"file":["7.18"],"if":["7.19"],"division":["7.19"],"by":["7.19"],"zero":["7.19"],"to":["7.19"],"rust":["7.20","7.21"],"中":["7.20"],"panic":["7.20"],"模块":["7.22"],"subtract":["7.23"],"在一个模块中":["7.23"],"关键字将函数":["7.23"],"cargo":["7.24"],"工具来创建和管理包和库":["7.24"],"要创建一个新的包":["7.24"],"要创建一个新的二进制":["7.25"],"new":["7.25","7.34"],"bin":["7.25","8.1"],"值将被自动回收":["7.27"],"这种机制可以避免内存泄漏和悬垂指针等问题":["7.27"],"let":["7.27","7.32","7.34"],"中的另一个核心概念":["7.28"],"用于在不转移所有权的情况下访问值":["7.28"],"length":["7.29"],"s":["7.29","7.30"],"string":["7.30"],"如线程":["7.31"],"time":["7.32"],"duration":["7.32"],"use":["7.33"],"thread":["7.33"],"counter":["7.34"],"mut":["7.34"],"handles":["7.34"],"vec":["7.34"],"for":["7.34"],"文件可能不存在":["8.0"],"需要手动创建":["8.0"],"管理员权限":["8.0"],"sudo":["8.0"],"touch":["8.0"],"更改wsl":["8.0"],"conf需要管理员权限":["8.0"],"vim":["8.0"],"重启后打印shell":["8.1"],"echo":["8.1"],"shell":["8.1"],"结果类似":["8.1"],"usr":["8.1"],"适用于":["10.0"],"linux":["10.0"],"的":["10.0"],"确认":["10.1"],"虚拟化":["10.1"],"已开启":["10.1"],"virtualmachineplatform":["10.2"],"以下以命令行安装为例":["10.3"],"在":["10.3"],"终端输入命令":["10.3"],"terminal":["10.4"],"作为默认终端":["10.4"]},{"1":["7.32"],"2":["7.19","10.4"],"4":["7.19"],"10":["7.34"],"69":["2.3"],"300":["2.4"],"是人工智能和语言学领域的分支学科":["0.0"],"二元论者认为心灵是意识而非物质的":["0.1"],"智慧不能以纯物质来解释":["0.1"],"这实际上否认了人工智能产生的可能性":["0.1"],"唯物主义思想则认为包括我们的思维":["0.1"],"意识在内的一切都是物质的":["0.1"],"即所谓":["0.1"],"智慧":["0.1"],"是英国计算机科学家艾伦":["0.2"],"必须手动设置":["1.1"],"use":["1.1","7.18"],"version":["1.1"],"设置":["1.1"],"元素":["2.1"],"可用于在后台线程中执行复杂的绘图操作":["2.1"],"而不会影响主线程的性能":["2.1"],"中使用":["2.2"],"并且不能直接显示在页面中":["2.2"],"需要将绘制结果传递给主线程进行显示":["2.2"],"具体来说":["2.2"],"的优势在于":["2.2"],"多线程处理":["2.2"],"chrome":["2.3"],"onmessage":["2.4"],"function":["2.4"],"event":["2.4"],"document":["2.4"],"getelementbyid":["2.4"],"ctx":["2.4"],"getcontext":["2.4"],"2d":["2.4"],"drawimage":["2.4"],"data":["2.4"],"进行图像压缩":["2.5"],"尺寸缩放":["2.5"],"to":["3.1"],"publish":["3.1"],"null":["5.3"],"undefined":["5.3"],"weakmap":["5.4"],"tuple":["5.4"],"c":["7.1","8.1"],"haskell":["7.1"],"ocaml":["7.1"],"布尔值和字符":["7.3"],"arch":["7.4"],"与机器架构相关":["7.4"],"五种位数":["7.4"],"let":["7.5","7.7","7.19","7.30","7.33"],"例如":["7.6"],"元组":["7.8"],"输出":["7.9"],"访问数组中的元素可以使用索引":["7.10"],"trait":["7.11"],"其中":["7.11"],"x":["7.12","7.13","7.14"],"f64":["7.12"],"y":["7.12","7.14"],"quit":["7.13"],"move":["7.13"],"i32":["7.13","7.14"],"self":["7.14"],"struct":["7.14"],"point":["7.14"],"zero":["7.15"],"b":["7.16"],"和不可恢复错误":["7.17"],"unrecoverable":["7.17"],"rust":["7.18"],"std":["7.18"],"fs":["7.18"],"fn":["7.18","7.21","7.33"],"else":["7.19"],"宏来触发不可恢复错误":["7.20"],"例如在这个示例中":["7.20"],"我们使用":["7.20"],"main":["7.21","7.33"],"module":["7.22"],"包":["7.22"],"结构体":["7.23"],"枚举等声明为公共的":["7.23"],"这样它们就可以在其他模块中被访问":["7.23"],"new":["7.24"],"命令":["7.24","7.25"],"这将创建一个名为":["7.24","7.25"],"my":["7.24","7.25"],"s":["7.27"],"string":["7.27","7.29"],"from":["7.27"],"hello":["7.27"],"借用有两种形式":["7.28"],"println":["7.29"],"push":["7.30"],"str":["7.30"],"通道和互斥锁":["7.31"],"handle":["7.32","7.34"],"spawn":["7.32"],"for":["7.32"],"i":["7.32"],"in":["7.32","7.34"],"tx":["7.33"],"rx":["7.33"],"clone":["7.34"],"部分发行版默认没有vim":["8.0"],"可以使用vi":["8.0"],"使用方法一致":["8.0"],"vi":["8.0"],"新增以下内容":["8.0"],"bash":["8.0"],"boot":["8.0"],"systemd":["8.0"],"true":["8.0"],"表示成功":["8.1"],"新建zsh配置文件":["8.1"],"touch":["8.1"],"zshrc":["8.1"],"安装onmyzsh":["8.1"],"sh":["8.1"],"curl":["8.1"],"子系统":["10.0"],"可让开发人员直接在":["10.0"],"若未开启":["10.1"],"需在":["10.1"],"虚拟机平台":["10.2"],"注意":["10.2"],"你也可以直接搜索":["10.2"],"启用或关闭":["10.2"],"在操作面板中勾选":["10.2"],"list":["10.3"],"online":["10.3"],"查看所有可安装的":["10.3"],"setting":["10.4"],"点击添加配置文件":["10.4"],"复制一份对应":["10.4"]},{"0":["2.4","7.10"],"1":["7.16","7.34"],"3":["7.5"],"5":["7.15"],"10":["7.32"],"79":["2.3"],"1950":["0.2"],"此领域探讨如何处理及运用自然语言":["0.0"],"自然语言处理包括认知":["0.0"],"只是是物质运作的产物":["0.1"],"而非模糊飘渺的某种":["0.1"],"精神领域":["0.1"],"二元论的支持者笛卡尔认为":["0.1"],"只有人能与人进行交互和做出反应":["0.1"],"而机器不能":["0.1"],"他把这作为区别人类与机器的标准":["0.1"],"但nlp技术的出现显然打破了这个标准":["0.1"],"图灵于":["0.2"],"人工智能":["0.3"],"版本后":["1.1"],"才可在当前文件夹下使用":["1.1"],"此时应该手动设置":["1.1"],"别名":["1.1"],"的主要作用是在":["2.1"],"应用程序中进行高效的图形处理":["2.1"],"传统的":["2.1"],"可以在":["2.2"],"中进行多线程处理":["2.2"],"不会阻塞主线程":["2.2"],"从而提高页面的性能和响应速度":["2.2"],"edge":["2.3"],"线程中拿到":["2.4"],"进行绘图操作":["2.4"],"并将绘制结果传回主线程展示":["2.4"],"self":["2.4"],"context":["2.4"],"fillstyle":["2.4"],"red":["2.4"],"fillrect":["2.4"],"风格滤镜":["2.5"],"颜色调整等操作":["2.5"],"从而实现前端图片处理":["2.5"],"使用":["2.6","7.17"],"your":["3.1"],"site":["3.1"],"symbol":["5.3"],"python":["5.3"],"dict":["5.4"],"vs":["5.4"],"等":["7.1"],"但是它又有自己的特色":["7.1"],"比如内存安全":["7.1"],"的数据类型分为基本类型":["7.2"],"例如":["7.4"],"let":["7.4","7.6","7.12","7.16","7.18","7.29"],"a":["7.5","7.6","7.7"],"tuple":["7.8"],"first":["7.9","7.10"],"结构体和枚举是":["7.11"],"中最基本的自定义类型":["7.11"],"p":["7.12"],"y":["7.13"],"write":["7.13"],"string":["7.13"],"impl":["7.14"],"for":["7.14"],"mut":["7.15"],"result":["7.16"],"对于可恢复错误":["7.17"],"main":["7.18"],"f":["7.18"],"open":["7.18"],"hello":["7.18","7.30"],"可以使用模式匹配来处理":["7.19"],"类型的值":["7.19"],"宏来触发一个不可恢复错误":["7.20"],"当程序执行到这一行时":["7.20"],"this":["7.21"],"package":["7.22"],"库":["7.22"],"的新包":["7.24"],"其中包含一个名为":["7.24","7.25"],"的新二进制":["7.25"],"离开作用域":["7.27"],"内存被回收":["7.27"],"当一个值被赋值给另一个变量时":["7.27"],"原变量将失去所有权":["7.27"],"值的所有权将转移给新变量":["7.27"],"可变借用":["7.28"],"mutable":["7.28"],"len":["7.29"],"from":["7.30"],"这些特性可以帮助你编写高效且安全的并发代码":["7.31"],"println":["7.32"],"sleep":["7.32"],"handle":["7.33"],"spawn":["7.33","7.34"],"move":["7.33","7.34"],"num":["7.34"],"lock":["7.34"],"unwrap":["7.34"],"push":["7.34"],"interop":["8.0"],"appendwindowspath":["8.0"],"false":["8.0"],"true用于启用systemd功能":["8.0"],"false用于禁用windows的path变量":["8.0"],"这样就无法在linux子系统里使用windows上的功能":["8.0"],"如npm":["8.0"],"yarn等工具":["8.0"],"做到隔离":["8.0"],"避免版本问题":["8.0"],"但同时也无法使用code命令用windows的vscode打开linux上的文件":["8.0"],"fssl":["8.1"],"https":["8.1"],"raw":["8.1"],"githubusercontent":["8.1"],"com":["8.1"],"ohmyzsh":["8.1"],"master":["8.1"],"上按原样运行":["10.0"],"gnu":["10.0"],"bios":["10.1"],"设置中开启虚拟化":["10.1"],"适用于":["10.2"],"的":["10.2"],"子系统":["10.2"],"和":["10.2"],"function":["10.2"],"下载":["10.2"],"发行版":["10.3"],"install":["10.3"],"通过":["10.3"],"linux":["10.4"],"发行版的配置文件":["10.4"],"new":["10.4"]},{"0":["7.9","7.12"],"1":["7.9","7.12","7.15"],"2":["7.9","7.12","7.15","7.16"],"3":["10.4"],"14":["7.5"],"16":["2.3"],"42":["7.4"],"理解":["0.0"],"生成等部分":["0.0"],"通俗的说":["0.1"],"人工智能的定义就是":["0.1"],"能思考的人造机器":["0.1"],"然而":["0.1"],"即使":["0.1"],"是物质的":["0.1"],"年提出的思想实验":["0.2"],"目的是测试机器能否表现出与人一样的智力水准":["0.2"],"alias":["1.1"],"使得":["1.1"],"别名指向本地已安装的":["1.1"],"绘图是在主线程中进行的":["2.1"],"如果进行复杂的绘图操作":["2.1"],"会占用主线程的资源":["2.1"],"导致页面卡顿":["2.1"],"使用":["2.1"],"内存使用":["2.2"],"中创建":["2.2"],"因此可以使用更多的内存进行图像处理":["2.2"],"safari":["2.3"],"这个示例代码创建一个":["2.4"],"300x300":["2.4"],"的":["2.4"],"线程中绘制一个红色的矩形":["2.4"],"并将结果通过":["2.4"],"对象发送回主线程":["2.4"],"最终将结果绘制到页面上的":["2.4"],"另一种使用方法是":["2.4"],"将主线程现有的":["2.4"],"元素转换成离屏":["2.4"],"将控制权转交给":["2.4"],"数据可视化":["2.5"],"可以用于可视化大屏中的高性能绘图":["2.5"],"提升":["2.6"],"checkout":["3.1"],"upload":["3.1"],"javascript":["5.3"],"线程安全等":["7.1"],"本文将向前端开发者介绍":["7.1"],"复合类型和自定义类型":["7.2"],"a":["7.4"],"i32":["7.4"],"和数组":["7.8"],"second":["7.9","7.10"],"third":["7.9"],"println":["7.10","7.14","7.16","7.18","7.19","7.34"],"则是":["7.11"],"changecolor":["7.13"],"语法可以用于遍历集合":["7.15"],"如数组和范围":["7.15"],"result":["7.17","7.34"],"枚举类型来表示":["7.17"],"对于不可恢复错误":["7.17"],"txt":["7.18"],"match":["7.18","7.19"],"value":["7.19"],"error":["7.19"],"它将立即终止":["7.20"],"并显示一个错误消息":["7.20"],"fn":["7.20"],"is":["7.21"],"an":["7.21"],"library":["7.22"],"的库":["7.24"],"库的源代码位于":["7.24"],"src":["7.24","7.25"],"lib":["7.24"],"rs":["7.24","7.25"],"的可执行程序":["7.25"],"程序的源代码位于":["7.25"],"main":["7.25"],"s1":["7.27"],"和不可变借用":["7.28"],"from":["7.29","7.32","7.33"],"hello":["7.29"],"millis":["7.32"],"val":["7.33"],"string":["7.33"],"hi":["7.33"],"send":["7.33"],"join":["7.34"],"因此需要手动在linux的环境变量中添加code":["8.0"],"查看环境变量":["8.0"],"检查配置是否生效":["8.0"],"echo":["8.0"],"path":["8.0"],"path有很多方法":["8.0"],"这里采用更改":["8.0"],"zshrc":["8.0"],"方法实现":["8.0"],"前提是已经安装zsh":["8.0"],"在":["8.0"],"tools":["8.1"],"安装好后":["8.1"],"zhsrc":["8.1"],"会被写入配置数据":["8.1"],"更改其中的zsh":["8.1"],"环境":["10.0"],"包括大多数命令行工具":["10.0"],"各设备的":["10.1"],"设置不同":["10.1"],"内核更新包":["10.2"],"https":["10.2"],"wslstorestorage":["10.2"],"blob":["10.2"],"core":["10.2"],"net":["10.2"],"wslblob":["10.2"],"update":["10.2"],"x64":["10.2"],"name":["10.3"],"命令安装指定发行版":["10.3"],"按提示设置用户名":["10.3"],"密码后等待安装完成即可":["10.3"],"tab":["10.4"],"通过下拉框新建一个标签页打开对应终端":["10.4"]},{"1":["7.23"],"2":["7.23"],"3":["7.15","10.2"],"4":["2.3","7.15"],"5":["7.32"],"自然语言认知和理解是让电脑把输入的语言变成有意思的符号和关系":["0.0"],"然后根据目的再处理":["0.0"],"也并不代表它在理论上是可量化的":["0.1"],"1950年":["0.1"],"图灵发表了一篇划时代的论文":["0.1"],"文中预言了创造出具有真正智能的机器的可能性":["0.1"],"由于注意到":["0.1"],"这一概念难以确切定义":["0.1"],"测试时测试者透过计算机键盘输入文本并透过屏幕输出文本":["0.2"],"二元论者认为":["0.2"],"版本":["1.1"],"这样下一次打开终端":["1.1"],"会默认加载":["1.1"],"可以将复杂的绘图操作转移到":["2.1"],"中":["2.1"],"在后台线程中完成":["2.1"],"而普通的":["2.2"],"则受制于浏览器限制的内存大小":["2.2"],"安全性":["2.2"],"由于":["2.2"],"firefox":["2.3"],"中绘制":["2.4"],"而不需要再通过":["2.4"],"通信来传递绘制的效果":["2.4"],"使用":["2.4"],"htmlcanvaselement":["2.4"],"transfercontroltooffscreen":["2.4"],"从主线程的":["2.4"],"对象返回一个":["2.4"],"将":["2.4"],"传递给":["2.4"],"直接在":["2.4"],"中更新":["2.4"],"例如在绘制大量数据点时":["2.5"],"canvas":["2.6"],"pages":["3.1"],"artifact":["3.1"],"float":["5.3"],"编程语言":["7.1"],"并类比前端编程知识":["7.1"],"介绍":["7.1"],"b":["7.4","7.5","7.6","7.7"],"u64":["7.4"],"array":["7.8"],"输出":["7.10","7.30"],"中的一种特殊类型":["7.11"],"println":["7.12","7.30","7.33"],"let":["7.13","7.14","7.23"],"m":["7.13"],"p":["7.14"],"element":["7.15"],"in":["7.15"],"iter":["7.15"],"the":["7.15"],"value":["7.15"],"这只是":["7.16"],"语言的基本概念和语法":["7.16"],"更多的功能和特性需要在实际项目中不断学习和探索":["7.16"],"panic":["7.17"],"opened":["7.18"],"error":["7.18","7.21"],"main":["7.20","7.23"],"crash":["7.20"],"unrecoverable":["7.21"],"和二进制":["7.22"],"binary":["7.22"],"sum":["7.23"],"difference":["7.23"],"文件中":["7.24","7.25"],"要在包中添加一个新的库":["7.24"],"可以在":["7.24","7.25"],"目录下创建一个新的子目录":["7.24"],"要在包中添加一个新的二进制":["7.25"],"s2":["7.27"],"immutable":["7.28"],"unwrap":["7.33"],"received":["7.33"],"recv":["7.33"],"在这个示例中":["7.34"],"我们使用":["7.34"],"原子引用计数":["7.34"],"和":["7.34"],"来同步访问一个共享的":["7.34"],"变量":["7.34"],"我们创建了":["7.34"],"zshrc中添加一行":["8.0"],"用于在":["8.0"],"zshrc生效时自动往":["8.0"],"path上追加新的变量":["8.0"],"注意下方的":["8.0"],"mnt":["8.0"],"c":["8.0"],"路径是宿主windows上vscode的路径":["8.0"],"具体可以查看windows的环境变量":["8.0"],"export":["8.0"],"theme为":["8.1"],"theme":["8.1"],"agnoster":["8.1"],"以启用":["8.1"],"主题配色":["8.1"],"若部分符号显示异常":["8.1"],"实用工具和应用程序":["10.0"],"且不会产生传统虚拟机或双启动设置开销":["10.0"],"可通过下列步骤在启用":["10.0"],"此处请自行搜索":["10.1"],"check":["10.1"],"msi":["10.2"],"若为":["10.2"],"windows11":["10.2"],"系统可跳过该步":["10.2"],"在":["10.2"],"运行":["10.2"],"set":["10.2"],"default":["10.2"],"安装好之后通过命令":["10.3"],"即可查看本地安装的所有":["10.3"],"kali":["10.4"],"之后便可以正常安装":["10.4"]},{"1":["7.14"],"2":["7.14"],"3":["7.23"],"105":["2.3"],"自然语言生成系统则是把计算机数据转化为自然语言":["0.0"],"他提出了著名的图灵测试":["0.1"],"如果一台机器能够与人类展开对话而不被辨别出其机器身份":["0.1"],"那么称这台机器具有智慧":["0.1"],"这一简化使得图灵能够令人信服地说明":["0.1"],"思考的机器":["0.1"],"是可能的":["0.1"],"即可在全局环境使用默认版本了":["1.1"],"离屏":["1.1"],"canvas":["1.1"],"offscreencanvas":["1.1"],"避免了对主线程的影响":["2.1"],"从而提高了":["2.1"],"应用程序的性能和用户体验":["2.1"],"因此可以更好地保护页面的安全性":["2.2"],"避免了恶意脚本的攻击":["2.2"],"进行绘图":["2.5"],"从而提高页面性能和响应速度":["2.5"],"性能":["2.6"],"deploy":["3.1"],"的语法":["7.1"],"0xff":["7.4"],"14159265358979323846":["7.5"],"字":["7.7"],"用于定义共享行为":["7.11"],"from":["7.13"],"hello":["7.13"],"使用范围":["7.15"],"number":["7.15"],"rev":["7.15"],"liftoff":["7.15"],"希望本文能为前端开发者提供一个":["7.16"],"入门的参考":["7.16"],"宏来终止程序":["7.17"],"failed":["7.18"],"to":["7.18"],"and":["7.20"],"burn":["7.20"],"println":["7.23"],"并在其中创建一个":["7.24"],"文件":["7.24","7.25"],"目录下创建一个新的":["7.25"],"失去所有权":["7.27"],"获得所有权":["7.27"],"注意":["7.30"],"在同一作用域中":["7.30"],"join":["7.32","7.33"],"unwrap":["7.32"],"got":["7.33"],"个线程":["7.34"],"每个线程都尝试对":["7.34"],"进行加":["7.34"],"操作":["7.34"],"通过使用互斥锁":["7.34"],"我们确保了在任何时刻只有一个线程可以访问":["7.34"],"users":["8.0"],"sutie":["8.0"],"appdata":["8.0"],"local":["8.0"],"programs":["8.0"],"microsoft":["8.0"],"vs":["8.0"],"code":["8.0"],"bin":["8.0"],"需要同时更改windows终端字体":["8.1"],"参考":["8.1"],"wsl官方文档":["8.1"],"并搭建前端开发环境":["10.0"],"vm":["10.1"],"version":["10.2"],"将":["10.2"],"wsl2":["10.2"],"设置为默认版本":["10.2"],"更多命令可输入":["10.2"],"help":["10.2"],"查看":["10.2"],"子系统":["10.3"],"git":["10.4"],"nvm":["10.4"],"等工具配置前端环境了":["10.4"]}]'},e={"0.0":{t:"nlp",p:`自然语言处理(Natural Language Processing, aka NLP)是人工智能和语言学领域的分支学科。此领域探讨如何处理及运用自然语言；自然语言处理包括认知、理解、生成等部分。
自 ...`,l:"ai/index.html",a:"nlp"},"0.1":{t:"人工智能-artificial-intelligence",p:"要讨论人工智能(Artificial Intelligence, AI), 前提是先定义人工智能. 人工智能的定义可以分为两部分，即&quot;人工&quot;和&quot;智能&quot;。&quo ...",l:"ai/index.html#人工智能-artificial-intelligence",a:"人工智能-artificial-intelligence"},"0.2":{t:"图灵测试-turing-test",p:`图灵测试（英语：Turing test）是英国计算机科学家艾伦·图灵于 1950 年提出的思想实验，目的是测试机器能否表现出与人一样的智力水准。测试时测试者透过计算机键盘输入文本并透过屏幕输出文本。
 ...`,l:"ai/index.html#图灵测试-turing-test",a:"图灵测试-turing-test"},"0.3":{t:"ref",p:`
自然语言处理-维基百科
图灵测试-维基百科
人工智能-维基百科

`,l:"ai/index.html#ref",a:"ref"},"1.0":{t:"todo",p:"",l:"fed/index.html",a:"todo"},"1.1":{t:"nvm",p:`注意:
nvm 默认使用 default 版本的 node, 这里的 default 只是一个别名. 当 node 发布新版本后, 当前安装的 node 版本不再是最新的, default 别名指向的 ...`,l:"fed/index.html#nvm",a:"nvm"},"2.0":{t:"离屏-canvas-offscreencanvas",p:"",l:"fed/off-screen-canvas.html",a:"离屏-canvas-offscreencanvas"},"2.1":{t:"定义",p:"离屏 Canvas(OffscreenCanvas) 是 HTML5 提供的一个 API，可以在 Web Worker 中创建一个 Canvas 对象，这个对象没有对应的在 DOM 树中显示的 Can ...",l:"fed/off-screen-canvas.html#定义",a:"定义"},"2.2":{t:"与普通-canvas-的区别",p:"OffscreenCanvas 与传统的 Canvas 对象非常相似，都同时支持 2D 和 WebGL 渲染上下文。不同的是，OffscreenCanvas 是在 Web Worker 中创建的，只能 ...",l:"fed/off-screen-canvas.html#与普通-canvas-的区别",a:"与普通-canvas-的区别"},"2.3":{t:"浏览器支持情况",p:`OffscreenCanvas 是一个实验性的特性, 但已获得所有主流浏览器的支持:



浏览器
支持版本




Chrome
&gt;= 69


Edge
&gt;= 79


Safari
 ...`,l:"fed/off-screen-canvas.html#浏览器支持情况",a:"浏览器支持情况"},"2.4":{t:"如何使用",p:`
创建 OffscreenCanvas 对象, 并传递给 Worker

在主线程中使用 new OffscreenCanvas(width, height) 方法创建 OffscreenCanvas ...`,l:"fed/off-screen-canvas.html#如何使用",a:"如何使用"},"2.5":{t:"应用场景",p:`图像处理
OffscreenCanvas 可以在 Web Worker 中对大量图像进行处理，从而提高页面性能。例如，可以使用 OffscreenCanvas 进行图像压缩, 尺寸缩放、风格滤镜、颜色 ...`,l:"fed/off-screen-canvas.html#应用场景",a:"应用场景"},"2.6":{t:"ref",p:`
CanIUse OffScreenCanvas 浏览器支持
MDN OffScreenCanvas
使用 OffscreenCanvas 提升 Canvas 性能

`,l:"fed/off-screen-canvas.html#ref",a:"ref"},"3.0":{t:"github-action-杂项",p:"",l:"github/index.html",a:"github-action-杂项"},"3.1":{t:"ref",p:`
creating-a-custom-github-actions-workflow-to-publish-your-site
checkout
upload-pages-artifact
deplo ...`,l:"github/index.html#ref",a:"ref"},"5.0":{t:"前端开发者的python入门教程",p:"",l:"python/index.html",a:"前端开发者的python入门教程"},"5.1":{t:"前言",p:`本文旨在通过对比Javascript与Python的语法, 向前端开发者介绍Python, 帮助前端开发者入门Python.
`,l:"python/index.html#前言",a:"前言"},"5.2":{t:"数据类型",p:`
`,l:"python/index.html#数据类型",a:"数据类型"},"5.3":{t:"基础数据类型",p:`number BigInt String Boolean Null Undefined Symbol



Python
Javascript




float
Number



`,l:"python/index.html#基础数据类型",a:"基础数据类型"},"5.4":{t:"复杂数据类型",p:`Array Object Function Set Map WeakSet WeakMap Tuple
dict vs object
Tuple vs Array,Object
`,l:"python/index.html#复杂数据类型",a:"复杂数据类型"},"5.5":{t:"运算",p:"",l:"python/index.html#运算",a:"运算"},"5.6":{t:"数值运算",p:`加减乘除取余取模自增自减
`,l:"python/index.html#数值运算",a:"数值运算"},"5.7":{t:"比较运算",p:`
&lt; &gt;= &lt;= == === != !==

`,l:"python/index.html#比较运算",a:"比较运算"},"5.8":{t:"逻辑运算",p:`|| &amp;&amp; !
`,l:"python/index.html#逻辑运算",a:"逻辑运算"},"5.9":{t:"条件运算",p:"",l:"python/index.html#条件运算",a:"条件运算"},"5.10":{t:"循环与判断",p:`
`,l:"python/index.html#循环与判断",a:"循环与判断"},"5.11":{t:"变量与常量",p:"",l:"python/index.html#变量与常量",a:"变量与常量"},"5.12":{t:"基础语法",p:"",l:"python/index.html#基础语法",a:"基础语法"},"6.0":{t:"rust",p:"",l:"rust/index.html",a:"rust"},"7.0":{t:"写给前端开发者的-rust-入门教程",p:`
`,l:"rust/setup-for-fed-coder.html",a:"写给前端开发者的-rust-入门教程"},"7.1":{t:"前言",p:"Rust 是一门系统编程语言，它的目标是提供一种安全、并发、实用的编程语言。Rust 的设计借鉴了现有的一些编程语言，如 C++、Haskell、OCaml 等，但是它又有自己的特色，比如内存安全、线 ...",l:"rust/setup-for-fed-coder.html#前言",a:"前言"},"7.2":{t:"变量和数据类型",p:`Rust 是一门静态类型语言，变量在使用前必须声明。Rust 的数据类型分为基本类型、复合类型和自定义类型。
`,l:"rust/setup-for-fed-coder.html#变量和数据类型",a:"变量和数据类型"},"7.3":{t:"基本类型",p:`Rust 的基本类型包括整数、浮点数、布尔值和字符。
`,l:"rust/setup-for-fed-coder.html#基本类型",a:"基本类型"},"7.4":{t:"整数",p:`Rust 的整数类型包括有符号和无符号两种类型，分别有 8、16、32、64 和 arch（与机器架构相关）五种位数。例如：
let a: i32 = 42;
let b: u64 = 0xff;

`,l:"rust/setup-for-fed-coder.html#整数",a:"整数"},"7.5":{t:"浮点数",p:`Rust 的浮点数类型包括单精度(f32)和双精度(f64)两种。例如：
let a: f32 = 3.14;
let b: f64 = 3.14159265358979323846;

`,l:"rust/setup-for-fed-coder.html#浮点数",a:"浮点数"},"7.6":{t:"布尔值",p:`Rust 的布尔值类型为 bool，有两个值：true 和 false。例如：
let a: bool = true;
let b: bool = false;

`,l:"rust/setup-for-fed-coder.html#布尔值",a:"布尔值"},"7.7":{t:"字符",p:`Rust 的字符类型为 char，使用单引号表示。例如：
let a: char = 'A';
let b: char = '字';

`,l:"rust/setup-for-fed-coder.html#字符",a:"字符"},"7.8":{t:"复合类型",p:`复合类型可以将多个值组合成一个类型。Rust 有两个原生的复合类型：元组（tuple）和数组（array）。
`,l:"rust/setup-for-fed-coder.html#复合类型",a:"复合类型"},"7.9":{t:"元组",p:`元组是一个可以包含多个类型的值的组合，类似 TS 的元组。例如：
let a: (i32, f64, bool) = (42, 3.14, true);

访问元组中的值可以使用模式匹配或者使用点号加 ...`,l:"rust/setup-for-fed-coder.html#元组",a:"元组"},"7.10":{t:"数组",p:`数组是具有固定长度的相同类型元素的集合，类似 TS 的数组。例如：
let a: [i32; 5] = [1, 2, 3, 4, 5];

访问数组中的元素可以使用索引。例如：
let first = ...`,l:"rust/setup-for-fed-coder.html#数组",a:"数组"},"7.11":{t:"自定义类型",p:"Rust 的自定义类型包括结构体（struct）、枚举（enum）和 trait。其中，结构体和枚举是 Rust 中最基本的自定义类型，trait 则是 Rust 中的一种特殊类型，用于定义共享行为。 ...",l:"rust/setup-for-fed-coder.html#自定义类型",a:"自定义类型"},"7.12":{t:"结构体",p:`Rust 的结构体（struct）类似于 JavaScript 的对象。结构体可以包含多个字段，每个字段需要指定类型。例如：
struct Point {
    x: f64,
    y: f64 ...`,l:"rust/setup-for-fed-coder.html#结构体",a:"结构体"},"7.13":{t:"枚举",p:`Rust 的枚举（enum）类似于 JavaScript 的类，但它可以表示多种类型。例如：
enum Message {
    Quit,
    Move { x: i32, y: i32 }, ...`,l:"rust/setup-for-fed-coder.html#枚举",a:"枚举"},"7.14":{t:"trait",p:`Trait 是 Rust 中的一种特殊类型，用于定义共享行为。Trait 可以被其他类型实现，从而获得 Trait 中定义的方法。例如：
trait Printable {
    fn print( ...`,l:"rust/setup-for-fed-coder.html#trait",a:"trait"},"7.15":{t:"控制流",p:`Rust 支持常见的控制流结构，如 if、else、while、for 等。
if 和 else
Rust 的 if 和 else 语法与 JavaScript 类似。例如：
let a = 42;
 ...`,l:"rust/setup-for-fed-coder.html#控制流",a:"控制流"},"7.16":{t:"函数",p:`Rust 的函数定义使用 fn 关键字。函数参数需要指定类型，返回值类型使用 -&gt; 指定。例如：
fn add(a: i32, b: i32) -&gt; i32 {
    a + b
}

 ...`,l:"rust/setup-for-fed-coder.html#函数",a:"函数"},"7.17":{t:"错误处理",p:"Rust 提供了一种强大的错误处理机制，可以帮助你编写健壮的代码。Rust 有两种错误类型：可恢复错误（recoverable errors）和不可恢复错误（unrecoverable errors） ...",l:"rust/setup-for-fed-coder.html#错误处理",a:"错误处理"},"7.18":{t:"可恢复错误",p:"可恢复错误是那些可以通过返回一个 Result 类型来处理的错误。Result 类型是一个枚举类型，有两个变体：Ok 和 Err。例如在这个示例中，我们尝试打开一个文件。如果文件打开成功，我们将得到一 ...",l:"rust/setup-for-fed-coder.html#可恢复错误",a:"可恢复错误"},"7.19":{t:"result",p:`Result 是一个枚举类型，用于表示可能出错的操作的结果。它有两个变体：Ok 和 Err。例如：
fn divide(a: i32, b: i32) -&gt; Result&lt;i32, Str ...`,l:"rust/setup-for-fed-coder.html#result",a:"result"},"7.20":{t:"不可恢复错误",p:"不可恢复错误是那些无法通过返回一个 Result 类型来处理的错误。这类错误通常表示程序中的严重问题，需要立即终止程序的执行。在 Rust 中，可以使用 panic! 宏来触发不可恢复错误。例如在这个 ...",l:"rust/setup-for-fed-coder.html#不可恢复错误",a:"不可恢复错误"},"7.21":{t:"panic",p:`panic! 是一个宏，用于在遇到不可恢复错误时终止程序。例如
fn main() {
    panic!(&quot;This is an unrecoverable error.&quot;); ...`,l:"rust/setup-for-fed-coder.html#panic",a:"panic"},"7.22":{t:"模块系统",p:`Rust 的模块系统用于组织和管理代码。模块系统包括以下几个部分：模块（module）、包（package）、库（library）和二进制（binary）。
`,l:"rust/setup-for-fed-coder.html#模块系统",a:"模块系统"},"7.23":{t:"模块",p:`模块是 Rust 中的命名空间，用于将相关的代码组织在一起。可以使用 mod 关键字定义模块。例如：
mod math {
    pub fn add(a: i32, b: i32) -&gt; i ...`,l:"rust/setup-for-fed-coder.html#模块",a:"模块"},"7.24":{t:"包和库",p:`包（package）是一个包含一个或多个库（library）的项目。库是一组相关的模块。在 Rust 中，可以使用 Cargo 工具来创建和管理包和库。
要创建一个新的包，可以使用 cargo new ...`,l:"rust/setup-for-fed-coder.html#包和库",a:"包和库"},"7.25":{t:"二进制",p:`二进制（binary）是一个可执行程序。在 Rust 中，可以使用 Cargo 工具来创建和管理二进制。
要创建一个新的二进制，可以使用 cargo new --bin 命令：
cargo new
这 ...`,l:"rust/setup-for-fed-coder.html#二进制",a:"二进制"},"7.26":{t:"所有权与借用",p:"",l:"rust/setup-for-fed-coder.html#所有权与借用",a:"所有权与借用"},"7.27":{t:"所有权-ownership",p:`所有权是 Rust 中的一个核心概念，用于管理内存。在 Rust 中，每个值都有一个唯一的所有者，当所有者离开作用域时，值将被自动回收。这种机制可以避免内存泄漏和悬垂指针等问题。
例如：
{
     ...`,l:"rust/setup-for-fed-coder.html#所有权-ownership",a:"所有权-ownership"},"7.28":{t:"借用-borrowing",p:`借用是 Rust 中的另一个核心概念，用于在不转移所有权的情况下访问值。借用有两种形式：可变借用（mutable borrowing）和不可变借用（immutable borrowing）。
`,l:"rust/setup-for-fed-coder.html#借用-borrowing",a:"借用-borrowing"},"7.29":{t:"不可变借用",p:`不可变借用是对值的只读访问。可以使用 &amp; 符号创建不可变引用。例如：
fn print_length(s: &amp;String) {
    println!(&quot;length:  ...`,l:"rust/setup-for-fed-coder.html#不可变借用",a:"不可变借用"},"7.30":{t:"可变借用",p:`可变借用是对值的可写访问。可以使用 &amp;mut 符号创建可变引用。例如：
fn append_world(s: &amp;mut String) {
    s.push_str(&quot;  ...`,l:"rust/setup-for-fed-coder.html#可变借用",a:"可变借用"},"7.31":{t:"并发编程",p:`Rust 提供了一些原生的并发编程特性，如线程、通道和互斥锁。这些特性可以帮助你编写高效且安全的并发代码。
`,l:"rust/setup-for-fed-coder.html#并发编程",a:"并发编程"},"7.32":{t:"线程",p:`线程是操作系统中的并发执行单元。在 Rust 中，可以使用 std::thread 模块创建和管理线程。例如：
use std::thread;
use std::time::Duration;

f ...`,l:"rust/setup-for-fed-coder.html#线程",a:"线程"},"7.33":{t:"通道",p:`通道（channel）是一种用于在线程之间传递消息的同步原语。在 Rust 中，可以使用 std::sync::mpsc 模块创建和管理通道。例如：
use std::sync::mpsc;
use  ...`,l:"rust/setup-for-fed-coder.html#通道",a:"通道"},"7.34":{t:"互斥锁",p:`互斥锁（mutex）是一种用于在线程之间同步访问共享资源的同步原语。在 Rust 中，可以使用 std::sync::Mutex 类型创建和管理互斥锁。例如：
use std::sync::{Arc, ...`,l:"rust/setup-for-fed-coder.html#互斥锁",a:"互斥锁"},"7.35":{t:"参考",p:"",l:"rust/setup-for-fed-coder.html#参考",a:"参考"},"8.0":{t:"to-be-sorted-out",p:`待整理的记录笔记
wsl.conf
更改wsl.conf后需要关闭 linux 子系统, 并等待至少 8s 待其完全关闭, 再重启才能生效.
也可以使用wsl --shutdown关闭所有linux子 ...`,l:"wsl/index.html",a:"to-be-sorted-out"},"8.1":{t:"zsh",p:`
安装zsh: apt install zsh, 安装好之后通过zsh --version 检查是否安装成功
设置为默认shell: 终端执行chsh -s $(which zsh)将zsh设置为默认 ...`,l:"wsl/index.html#zsh",a:"zsh"},"9.0":{t:"wsl-todo",p:`
`,l:"wsl/setup.html",a:"wsl-todo"},"9.1":{t:"安装",p:"",l:"wsl/setup.html#安装",a:"安装"},"9.2":{t:"path",p:`默认情况下,
`,l:"wsl/setup.html#path",a:"path"},"9.3":{t:"参考链接",p:`
微软WSL官方文档

`,l:"wsl/setup.html#参考链接",a:"参考链接"},"10.0":{t:"在-windows-中启用-wsl-以进行前端开发",p:"WSL(适用于 Linux 的 Windows 子系统) 可让开发人员直接在 Windows 上按原样运行 GNU/Linux 环境（包括大多数命令行工具、实用工具和应用程序），且不会产生传统虚拟机或 ...",l:"wsl/wsl-in-fed.html",a:"在-windows-中启用-wsl-以进行前端开发"},"10.1":{t:"_1-设备开启虚拟化",p:`打开 &quot;设备管理器&quot; 确认 &quot;虚拟化&quot; 已开启, 若未开启, 需在 Bios 设置中开启虚拟化, 各设备的 Bios 设置不同, 此处请自行搜索.
!check ...`,l:"wsl/wsl-in-fed.html#_1-设备开启虚拟化",a:"_1-设备开启虚拟化"},"10.2":{t:"_2-windows-启用相应功能",p:`

以管理员身份运行 PowerShell, 输入命令 dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsyste ...`,l:"wsl/wsl-in-fed.html#_2-windows-启用相应功能",a:"_2-windows-启用相应功能"},"10.3":{t:"_3-下载-安装-linux-分发版",p:`可通过 Windows 应用商店或命令行方式安装适用于 WSL 的 Linux 分发版, 以下以命令行安装为例:
在 Windows 终端输入命令 wsl --list --online, 查看所有可 ...`,l:"wsl/wsl-in-fed.html#_3-下载-安装-linux-分发版",a:"_3-下载-安装-linux-分发版"},"10.4":{t:"_4-安装配置-windows-终端",p:`

在应用商店搜索安装 Windows Terminal 作为默认终端
!terminal-setting


点击添加配置文件, 复制一份对应 Linux 发行版的配置文件
!terminal-ne ...`,l:"wsl/wsl-in-fed.html#_4-安装配置-windows-终端",a:"_4-安装配置-windows-终端"}},n={previewLength:100,buttonLabel:"搜索",placeholder:"情输入关键词"},s={INDEX_DATA:t,PREVIEW_LOOKUP:e,Options:n};export{s as default};
